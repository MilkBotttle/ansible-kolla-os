#!/bin/bash 

function find_base {
    if test -f "$PWD/ansible/site.yaml"; then
        PLAYBOOK=$PWD/ansible/site.yaml
    elif test -f "$HOME/ansible-kolla-os/ansible/site.yaml"; then
        PLAYBOOK=$HOME/ansible-kolla-os/ansible/site.yaml
    else
        echo "Playbook not found!"
        exit 1
    fi
}
function process_cmd {
    echo "$ACTION : $CMD"
    $CMD
    if [[ $? -ne 0 ]]; then
        echo "Command failed $CMD"
        exit 1
    fi
}

function usage {
    cat <<EOF
Usage: $0 COMMAND [--options]

Options:
    --help, -h          Show this usage information
    --wait              Wait server deploy complete
    --verbose, -v       Increase verbosity of ansible-playbook
    --inventory, -i     Specify path to ansible inventory file
    --hosts             Specify hosts or group use comma split string to run plays required --inventory 
    --config, -c        Config file path, default is config.yaml
    --nodes-csv         Nodes csv file path, default is nodes.csv
    --networks-csv      Networks csv file path, default is networks.csv
    --update-etc-hosts  Update /etc/hosts, add alias for ssh, use this option with create-server.
        

Commands:
    deployed            Create nic-config and inventory from config.yaml
                        for deployed servers. Each server required network need assign
                        a ip in config.yaml.
    destroy             Destroy Servers, Port, Network, Configs.
    create-server       Deploy all server defined.
    generate-inventory  Generate inventory file.
    reconfig-network	Reconfig deployed server network, require --inventory and --hosts
    validate            Validate config.yaml and nic-configs. (Only worked for using undercloud)
    update-etc-hosts    Update /etc/hosts, add alias for ssh.
EOF
}
SHORT_OPTS="hi:c:v"
LONG_OPTS="help,wait,verbose,validate,inventory:,hosts:,config:,nodes-csv:,networks-csv:,update-etc-hosts"

RAW_ARGS="$*"
ARGS=$(getopt -o "${SHORT_OPTS}" -l "${LONG_OPTS}" --name "$0" -- "$@") || { usage >&2; exit 2; }

eval set -- "$ARGS"
INVNTORY_REQUIRED=false
VERBOSITY=
INVENTORY=
HOSTS=
EXTRA_OPTS=${EXTRA_OPTS}
find_base

while [ "$#" -gt 0 ]; do
    case "$1" in 
        (--config|-c)
            if test -f "$2";then
                EXTRA_OPTS="$EXTRA_OPTS -e config_path=$2"
            else
                echo "Config file $2 not found!"
                exit 3
            fi
            shift 2
            ;;
        (--hosts)
            HOSTS="-e host=$2"
            INVNTORY_REQUIRED=true
            shift 2
            ;;
        (--inventory|-i)
            INVENTORY="--inventory $2"
            shift 2
            ;;
        (--wait)
            EXTRA_OPTS="$EXTRA_OPTS -e wait_deploy=yes"
            shift
            ;;
        (--verbose|-v)
            VERBOSITY="$VERBOSITY --verbose"
            shift
            ;;
        (--update-etc-hosts)
            EXTRA_OPTS="$EXTRA_OPTS --tags etc-hosts"
            shift 
            ;;
        (--nodes-csv)
            EXTRA_OPTS="$EXTRA_OPTS -e nodes_csv_path=$2"
            shift 2
            ;;
        (--networks-csv)
            EXTRA_OPTS="$EXTRA_OPTS -e networks_csv_path=$2"
            shift 2
            ;;
        (--help|-h)
            usage
            shift
            exit 0
            ;;
        (--)
            shift
            break
            ;;
        (*)
            echo 'error'
            exit 3
            ;;
esac
done

if [ "$INVNTORY_REQUIRED" = "true" ];then
    if [ "x$INVENTORY" = "x" ];then
        echo "ERROR: When use --hosts required --inventory."
        exit 3
    fi
fi

case "$1" in 
    (deployed)
        ACTION="Deploy with deployed servers."
        EXTRA_OPTS="$EXTRA_OPTS --tags deployed-server "
        ;;
    (destroy)
        ACTION="Destroy all Servers, Port, Netowrk"
        EXTRA_OPTS="$EXTRA_OPTS --tags destroy -e deploy_action=destroy"
        ;;
    (full-create-server)
        ACTION="Create network, port, server"
        EXTRA_OPTS="$EXTRA_OPTS --tags full-create-server -e deploy_action=create"
        ;;
    (create-server)
        ACTION="Deploy all defined servers not update inventory"
        EXTRA_OPTS="$EXTRA_OPTS --tags create-server -e deploy_action=create"
        ;;
    (generate-inventory)
        ACTION="Generate invntory"
        EXTRA_OPTS="$EXTRA_OPTS --tags create-inventory -e deploy_action=create"
        ;;
    (network-reconfig)
        ACTION="Reconfig deployed server network"
        EXTRA_OPTS="$EXTRA_OPTS --tags reconfig-network -e deploy_action=reconfig"
        ;;
    (validate)
        EXTRA_OPTS="$EXTRA_OPTS --tags validate"
        ;;
    (update-etc-hosts)
        EXTRA_OPTS="--tags etc-hosts"
        ;;
    (*)
        usage
        exit 0
        ;;
esac

CMD="ansible-playbook $INVENTORY $HOSTS $VALIDATE_OPTS $EXTRA_OPTS $PLAYBOOK $VERBOSITY"
process_cmd
