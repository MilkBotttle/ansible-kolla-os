# Create storage, tunnel, external, ctlplane, internal port

# Random create ports
- name: "Create {{ servername }} ctlplane port randomly"
  os_port:
    name: "{{ servername }}_ctlplane_port"
    network: "ctlplane"
  register: ctlplane_port
  when: (deployed_server) and
        (networks.ctlplane.hosts is not defined) or
        (networks.ctlplane.hosts[servername] is not defined)
  tags:
    - deploy-server
    - create-network

- name: "Create {{ servername }} storage port randomly"
  os_port:
    name: "{{ servername }}_storage_port"
    network: "storage"
  register: storage_port
  when: (networks.storage.hosts is not defined) or
        (networks.storage.hosts[servername] is not defined)
  tags:
    - deploy-server
    - create-network

- name: "Create {{ servername }} internal port randomly"
  os_port:
    name: "{{ servername }}_internal_port"
    network: "internal"
  register: internal_port
  when: (networks.internal.hosts is not defined) or
        (networks.internal.hosts[servername] is not defined)
  tags:
    - deploy-server
    - create-network

- name: "Create {{ servername }} external port randomly"
  os_port:
    name: "{{ servername }}_external_port"
    network: "external"
  register: external_port
  when: (networks.external.hosts is not defined) or
        (networks.external.hosts[servername] is not defined)
  tags:
    - deploy-server
    - create-network

- name: "Create {{ servername }} tunnel port randomly"
  os_port:
    name: "{{ servername }}_tunnel_port"
    network: "tunnel"
  register: tunnel_port
  when: (networks.tunnel.hosts is not defined) or
        (networks.tunnel.hosts[servername] is not defined)
  tags:
    - deploy-server
    - create-network

# create static
- name: "Create {{ servername }} ctlplane port static"
  os_port:
    name: "{{ servername }}_ctlplane_port"
    network: "ctlplane"
    fixed_ips:
      - ip_address: "{{ networks.ctlplane.hosts[servername] }}"
  register: ctlplane_port_static
  when: (not deployed_server) and
        (network.ctlplane.hosts is defined) and
        (networks.ctlplane.hosts[servername] is defined)
  tags:
    - deploy-server
    - create-network

- name: "Create {{ servername }} storage port static"
  os_port:
    name: "{{ servername }}_storage_port"
    network: "storage"
    fixed_ips:
      - ip_address:  "{{ networks.storage.hosts[servername] }}"
  register: storage_port_static
  when: (networks.storage.hosts is defined) and
        (networks.storage.hosts[servername] is defined)

- name: "Create {{ servername }} internal port static"
  os_port:
    name: "{{ servername }}_internal_port"
    network: "internal"
    fixed_ips:
      - ip_address: "{{ networks.internal.hosts[servername] }}"
  register: internal_port_static
  when: (networks.internal.hosts is defined) and
        (networks.internal.hosts[servername] is defined)
  tags:
    - deploy-server
    - create-network

- name: "Create {{ servername }} external port static"
  os_port:
    name: "{{ servername }}_external_port"
    network: "external"
    fixed_ips:
      - ip_address: "{{ networks.external.hosts[servername] }}"
  register: external_port_static
  when: (networks.external.hosts is defined) and
        (networks.external.hosts[servername] is defined)
  tags:
    - deploy-server
    - create-network

- name: "Create {{ servername }} tunnel port static"
  os_port:
    name: "{{ servername }}_tunnel_port"
    network: "tunnel"
    fixed_ips:
      - ip_address: "{{ networks.tunnel.hosts[servername] }}"
  register: tunnel_port_static
  when: (networks.tunnel.hosts is defined) and
        (networks.tunnel.hosts[servername] is defined)
  tags:
    - deploy-server
    - create-network

- name: Save deployed server ctlplane info
  set_fact:
    ctlplane_ip: "{{ networks.ctlplane.hosts[servername] }}"
    ctlplane_port_id: ""
  when: deployed_server
  tags:
    - deploy-server
    - create-network

- name: Save server ctlplane info
  set_fact:
    ctlplane_ip: "{{ ctlplane_port.port.fixed_ips[0].ip_address }}"
    ctlplane_port_id: "{{ ctlplane_port.id }}"
  when: not deployed_server and (ctlplane_port.port is defined)
  tags:
    - deploy-server
    - create-network

- name: Save server ctlplane info
  set_fact:
    ctlplane_ip: "{{ ctlplane_port_static.port.fixed_ips[0].ip_address }}"
    ctlplane_port_id: "{{ ctlplane_port_static.id }}"
  when: not deployed_server and (ctlplane_port_static.port is defined)
  tags:
    - deploy-server
    - create-network

- name: Save storage static network info
  set_fact:
    storage_ip: "{{ storage_port_static.port.fixed_ips[0].ip_address }}"
  when: storage_port_static is defined and storage_port_static.port is defined
  tags:
    - deploy-server
    - create-network

- name: Save storage network info
  set_fact:
    storage_ip: "{{ storage_port.port.fixed_ips[0].ip_address }}"
  when: storage_port is defined and storage_port.port is defined
  tags:
    - deploy-server
    - create-network

- name: Save tunnel network info
  set_fact:
    tunnel_ip: "{{ tunnel_port.port.fixed_ips[0].ip_address }}"
  when: tunnel_port is defined and tunnel_port.port is defined
  tags:
    - deploy-server
    - create-network

- name: Save tunnel static network info
  set_fact:
    tunnel_ip: "{{ tunnel_port_static.port.fixed_ips[0].ip_address }}"
  when: tunnel_port_static is defined and tunnel_port_static.port is defined
  tags:
    - deploy-server
    - create-network

- name: Save external network info
  set_fact:
    external_ip: "{{ external_port.port.fixed_ips[0].ip_address }}"
  when: external_port is defined and external_port.port is defined
  tags:
    - deploy-server
    - create-network

- name: Save external static network info
  set_fact:
    external_ip: "{{ external_port_static.port.fixed_ips[0].ip_address }}"
  when: external_port_static is defined and external_port_static.port is defined
  tags:
    - deploy-server
    - create-network

- name: Save internal network info
  set_fact:
    internal_ip: "{{ internal_port.port.fixed_ips[0].ip_address }}"
  when: internal_port is defined and internal_port.port is defined
  tags:
    - deploy-server
    - create-network

- name: Save internal static network info
  set_fact:
    internal_ip: "{{ internal_port_static.port.fixed_ips[0].ip_address }}"
  when: internal_port_static is defined and internal_port_static.port is defined
  tags:
    - deploy-server
    - create-network
